version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: fpl-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: fantasy_football
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fpl-backend
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      PORT: 3001
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/fantasy_football
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-this-in-production}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-7d}
      SNOWFLAKE_ACCOUNT: ${SNOWFLAKE_ACCOUNT:-}
      SNOWFLAKE_USER: ${SNOWFLAKE_USER:-}
      SNOWFLAKE_PASSWORD: ${SNOWFLAKE_PASSWORD:-}
      SNOWFLAKE_DATABASE: ${SNOWFLAKE_DATABASE:-}
      SNOWFLAKE_WAREHOUSE: ${SNOWFLAKE_WAREHOUSE:-}
      SNOWFLAKE_SCHEMA: ${SNOWFLAKE_SCHEMA:-PUBLIC}
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./src:/app/src
      - ./prisma:/app/prisma
    command: sh -c "npx prisma migrate deploy && npm start"

  # Development service with hot-reload
  backend-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: fpl-backend-dev
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      PORT: 3001
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/fantasy_football
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-this-in-production}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-7d}
      SNOWFLAKE_ACCOUNT: ${SNOWFLAKE_ACCOUNT:-}
      SNOWFLAKE_USER: ${SNOWFLAKE_USER:-}
      SNOWFLAKE_PASSWORD: ${SNOWFLAKE_PASSWORD:-}
      SNOWFLAKE_DATABASE: ${SNOWFLAKE_DATABASE:-}
      SNOWFLAKE_WAREHOUSE: ${SNOWFLAKE_WAREHOUSE:-}
      SNOWFLAKE_SCHEMA: ${SNOWFLAKE_SCHEMA:-PUBLIC}
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./src:/app/src
      - ./prisma:/app/prisma
      - /app/node_modules
    command: sh -c "npx prisma migrate deploy && npm run dev"
    profiles:
      - dev

volumes:
  postgres_data:
    driver: local
